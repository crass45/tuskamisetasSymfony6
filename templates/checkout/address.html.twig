{% extends "carrito/layout.html.twig" %}

{% block title %}Datos de Envío y Facturación{% endblock %}

{% block cuerpoProceso %}
    <div class="row" style="background-color: white; padding: 20px;">
        <form action="{{ path('app_checkout_process', {'_locale': app.request.locale}) }}" method="post" id="checkoutForm">
            <input type="hidden" id="tipoEnvio" name="tipoEnvio" value="1">

            <div class="col-lg-6" style="text-align: left;">
                <div class="border_gris login-form" style="padding: 20px">
                    <h3 style="font-weight: bold">DATOS DE FACTURACIÓN</h3>
                    <div id="billingForm" data-province-id="{{ formContacto.vars.value.direccionFacturacion.provinciaBD.id|default('') }}">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    {{ form_label(formContacto.nombre) }}
                                    {{ form_widget(formContacto.nombre, {'attr': {'class': 'form-control form-control-lg'}}) }}
                                    {{ form_errors(formContacto.nombre) }}
                                </div>
                                <div class="form-group">
                                    {{ form_label(formContacto.apellidos) }}
                                    {{ form_widget(formContacto.apellidos, {'attr': {'class': 'form-control form-control-lg'}}) }}
                                    {{ form_errors(formContacto.apellidos) }}
                                </div>
                                <div class="form-group">
                                    {{ form_label(formContacto.cif) }}
                                    {{ form_widget(formContacto.cif, {'attr': {'class': 'form-control form-control-lg'}}) }}
                                    {{ form_errors(formContacto.cif) }}
                                </div>
                                <div class="form-group">
                                    {{ form_label(formContacto.telefonoMovil) }}
                                    {{ form_widget(formContacto.telefonoMovil, {'attr': {'class': 'form-control form-control-lg'}}) }}
                                    {{ form_errors(formContacto.telefonoMovil) }}
                                </div>
                                <div class="form-group">
                                    {{ form_label(formContacto.telefonoOtro) }}
                                    {{ form_widget(formContacto.telefonoOtro, {'attr': {'class': 'form-control form-control-lg'}}) }}
                                    {{ form_errors(formContacto.telefonoOtro) }}
                                </div>
                            </div>
                            <div class="col-md-6">
                                {% set billing_address_form = formContacto.direccionFacturacion %}
                                <div class="form-group">
                                    {{ form_label(billing_address_form.dir) }}
                                    {{ form_widget(billing_address_form.dir, {'attr': {'class': 'form-control form-control-lg'}}) }}
                                    {{ form_errors(billing_address_form.dir) }}
                                </div>
                                <div class="form-group">
                                    {{ form_label(billing_address_form.cp) }}
                                    {{ form_widget(billing_address_form.cp, {'attr': {'class': 'form-control form-control-lg'}}) }}
                                    {{ form_errors(billing_address_form.cp) }}
                                </div>
                                <div class="form-group">
                                    {{ form_label(billing_address_form.poblacion) }}
                                    {{ form_widget(billing_address_form.poblacion, {'attr': {'class': 'form-control form-control-lg'}}) }}
                                    {{ form_errors(billing_address_form.poblacion) }}
                                </div>
                                <div class="form-group">
                                    {{ form_label(billing_address_form.paisBD) }}
                                    {{ form_widget(billing_address_form.paisBD) }}
                                    {{ form_errors(billing_address_form.paisBD) }}
                                </div>
                                <div class="form-group province-select-container">
                                    {{ form_label(billing_address_form.provinciaBD) }}
                                    {{ form_widget(billing_address_form.provinciaBD, {'attr': {'class': 'form-control form-control-lg'}}) }}
                                    {{ form_errors(billing_address_form.provinciaBD) }}
                                </div>
                                <div class="form-group province-text-input-container" style="display: none;">
                                    {{ form_label(billing_address_form.provincia) }}
                                    {{ form_widget(billing_address_form.provincia, {'attr': {'class': 'form-control form-control-lg'}}) }}
                                    {{ form_errors(billing_address_form.provincia) }}
                                </div>
                            </div>
                        </div>
                        {{ form_rest(formContacto) }}
                    </div>
                </div>
            </div>

            <div class="col-lg-6" style="text-align: left;">
                <div class="border_gris" style="padding: 20px">
                    <h3 style="font-weight: bold">{% trans %}DIRECCIÓN DE ENTREGA{% endtrans %}</h3>
                    <ul class="nav nav-tabs" id="entregaTab" role="tablist">
                        <li class="nav-item active"><a class="nav-link" data-toggle="tab" data-tipoenvio="1" href="#mismadireccion">{% trans %}Misma que facturación{% endtrans %}</a></li>
                        <li class="nav-item"><a class="nav-link" data-toggle="tab" data-tipoenvio="2" href="#nuevadireccion">{% trans %}Otra dirección{% endtrans %}</a></li>
                        <li class="nav-item"><a class="nav-link" data-toggle="tab" data-tipoenvio="3" href="#recogertienda">{% trans %}Recoger en tienda{% endtrans %}</a></li>
                    </ul>
                    <div class="tab-content" id="myTabContent">
                        <div class="tab-pane fade in active" id="mismadireccion"><br><h4 style="font-weight: bold">El pedido se enviará a la dirección de facturación</h4></div>
                        <div class="tab-pane fade" id="nuevadireccion">
                            {% if contacto.direccionesEnvio is not empty %}
                                <h4 style="font-weight: bold; margin-top: 15px;">Mis Direcciones</h4>
                                <select class="form-control" name="misdirecciones" id="misdirecciones">
                                    <option value="-1">Crear una nueva dirección</option>
                                    {% for direccion in contacto.direccionesEnvio %}
                                        {# --- INICIO DE LA MEJORA --- #}
                                        <option value="{{ direccion.id }}" {% if direccion.predeterminada %}selected{% endif %}>
                                            {{ direccion.nombre }} - {{ direccion.dir }}, {{ direccion.poblacion }}
                                        </option>
                                        {# --- FIN DE LA MEJORA --- #}
                                    {% endfor %}
                                </select>
                            {% endif %}

                            <div id="newAddressFormContainer" style="margin-top: 15px; display: none;">
                                {# El formulario para la nueva dirección se cargará aquí con AJAX #}
                            </div>
                        </div>
                        <div class="tab-pane fade" id="recogertienda"><br><h4 style="font-weight: bold">{% trans %}RECOGER EN TUSKAMISETAS{% endtrans %}</h4><p>Cuando su pedido esté listo le enviaremos un email para que pueda recogerlo en nuestras instalaciones.</p></div>
                    </div>
                </div>
            </div>

            <div class="col-lg-12">
                <div style="margin:15px; border-top: 1px dashed #999;"></div>
                <div class="col-lg-12 " style="text-align: right">
                    <div style="margin-bottom: 10px;">
                        <input id="privacityTKM" type="checkbox" required>
                        <label for="privacityTKM">Acepto los <a href="{{ path('app_terms_of_use', {'_locale': app.request.locale}) }}" target="_blank">Términos de uso</a> y la <a href="{{ path('app_privacy_policy', {'_locale': app.request.locale}) }}" target="_blank">Política de privacidad</a></label>
                    </div>
                </div>
                <div class="col-xs-6" style="text-align:left; margin-top:20px; margin-bottom: 20px;">
                    <a class="btn btn-default check_out" href="{{ path('app_cart_show', {'_locale': app.request.locale}) }}">Volver al Carrito</a>
                </div>
                <div class="col-xs-6" style="text-align:right; margin-top:20px; margin-bottom: 20px">
                    <button type="submit" id="confirmarPedidoBtn" class="btn btn-default check_out" style="background-color: #ff9000;">
                        {% trans %}Continuar con el Pedido{% endtrans %}
                    </button>
                </div>
            </div>
        </form>
    </div>

    {# =================================================================== #}
    {# INICIO DE LA CORRECCIÓN DEL JAVASCRIPT #}
    {# =================================================================== #}
    <script>
        $(document).ready(function() {
            $('#carropaso3').css('color', 'black');

            const $shippingFormContainer = $('#newAddressFormContainer');
            const $misDireccionesDropdown = $('#misdirecciones');
            $shippingFormFields = $shippingFormContainer.find('input, select, textarea');



// // --- FUNCIÓN CENTRAL PARA GESTIONAR EL ESTADO DEL FORMULARIO DE ENVÍO ---#}
            function updateShippingFormState() {
                const isOtraDireccionActive = $('#nuevadireccion').hasClass('active');
                const $shippingFormFields = $shippingFormContainer.find('input, select, textarea');
                console.warn($shippingFormFields);

                if (isOtraDireccionActive) {
                    $shippingFormFields.prop('disabled', false); // Activa los campos para validación y envío
                } else {
                    $shippingFormFields.prop('disabled', true); // Desactiva los campos
                }
            }


            // --- LÓGICA PARA PESTAÑAS (ACTUALIZA EL INPUT OCULTO) ---
            $('#entregaTab a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
                const tipoEnvio = $(e.target).data('tipoenvio');
                $shippingFormFields = $shippingFormContainer.find('input, select, textarea');
                $shippingFormFields.prop('disabled', true); // Desactiva los campos
                console.warn($shippingFormFields);
                $('#tipoEnvio').val(tipoEnvio);
                console.warn(tipoEnvio);
                if(tipoEnvio==2){
                    $shippingFormContainer.show();
                    updateShippingFormState();
                }else{
                    $shippingFormContainer.hide();
                    updateShippingFormState()
                }
            });

            // --- LÓGICA PARA EL DESPLEGABLE DE DIRECCIONES ---
            function manageShippingAddressView() {
                const selectedId = $misDireccionesDropdown.val();
                if (selectedId == '-1') {
                    // Cargar un formulario vacío y mostrarlo
                    loadAddressForm(-1);
                    $shippingFormContainer.slideDown();
                } else if (selectedId) {
                    // Cargar la dirección seleccionada y mostrarla
                    loadAddressForm(selectedId);
                    $shippingFormContainer.slideDown();
                }
            }
            $misDireccionesDropdown.on('change', manageShippingAddressView);

            // --- LÓGICA DE CARGA AJAX ---
            function loadAddressForm(direccionId) {
                let url = "{{ path('app_checkout_load_address', {'_locale': app.request.locale, 'id': 'DIR_ID'}) }}";
                url = url.replace('DIR_ID', direccionId > 0 ? direccionId : '');
                $shippingFormContainer.html('<p>Cargando...</p>').load(url, function(response, status) {
                    if (status === 'success') {
                        handleCountryChange($shippingFormContainer.find('.country-selector'));
                        updateShippingFormState();
                    }
                });
            }

            // --- LÓGICA DE INICIALIZACIÓN AL CARGAR LA PÁGINA ---
            const $selectedAddress = $misDireccionesDropdown.find('option:selected');
            if ($selectedAddress.length > 0 && $selectedAddress.val() != '-1') {
                // 1. Hay una dirección predeterminada.
                // Activamos la pestaña "Otra dirección".
                // $('#nuevadireccion-tab').tab('show');
                $('.nav-tabs a[href="#nuevadireccion"]').tab('show');

                // 2. Cargamos el formulario con los datos de esa dirección.
                loadAddressForm($selectedAddress.val());
                // 3. MOSTRAMOS el contenedor del formulario.
                $shippingFormContainer.show();
            } else {
                // 4. No hay dirección predeterminada.
                // Activamos la pestaña "Misma que facturación" por defecto.
                // $('#mismadireccion-tab').tab('show');
                $('.nav-tabs a[href="#mismadireccion"]').tab('show');
                // 5. Ocultamos el contenedor del formulario de envío.
                $shippingFormContainer.hide();
                // 6. Precargamos un formulario vacío para que esté listo si el usuario lo necesita.
                loadAddressForm(-1);

            }

            // --- LÓGICA PARA PROVINCIAS ---
            function handleCountryChange(countrySelectElement) {
                const $formContainer = $(countrySelectElement).closest('#billingForm, #addressForm');
                if ($formContainer.length === 0) return;
                const $provinceSelectContainer = $formContainer.find('.province-select-container');
                const $provinceTextContainer = $formContainer.find('.province-text-input-container');
                const paisID = $(countrySelectElement).val();

                if (!paisID) {
                    $provinceSelectContainer.hide();
                    $provinceTextContainer.show();
                    return;
                }

                let url = "{{ path('api_get_country_provinces', {id: 'PAIS_ID'}) }}".replace('PAIS_ID', paisID);
                $.ajax({
                    url: url,
                    type: "GET",
                    dataType: "JSON",
                    success: function (provincias) {
                        const $provinciasSelect = $formContainer.find('.province-select-container select');
                        const $provinciasText = $formContainer.find('.province-text-input-container input');
                        console.warn($provinciasText);
                        const savedProvinceId = $formContainer.data('province-id');
                        if (provincias.length > 0) {
                            $provinciasSelect.html('<option value="">Selecciona una provincia...</option>');
                            $.each(provincias, function (key, provincia) {
                                $provinciasSelect.append(`<option value="${provincia.id}">${provincia.name}</option>`);
                            });
                            if (savedProvinceId) {
                                $provinciasSelect.val(savedProvinceId);
                            }
                            $provinceSelectContainer.show();
                            $provinceTextContainer.hide();
                            $provinciasSelect.prop('required',true);
                            $provinciasText.prop('required',false);
                        } else {
                            $provinceSelectContainer.hide();
                            $provinceTextContainer.show();
                            $provinciasSelect.prop('required', false);
                            $provinciasText.prop('required',true);
                        }
                    }
                });
            }

            $('body').on('change', '.country-selector', function() {
                handleCountryChange(this);
            });
            handleCountryChange($('#billingForm').find('.country-selector'));



            // --- INICIO DE LA MEJORA: CAPTURA DEL CLIENT ID DE GOOGLE ANALYTICS ---

            /**
             * Lee la cookie de Google Analytics (_ga) y extrae el Client ID.
             * Formato de la cookie: GA1.1.123456789.1234567890
             * El Client ID son las dos últimas partes: "123456789.1234567890"
             */
            function getGoogleAnalyticsClientId() {
                const cookies = document.cookie.split(';');
                for (let i = 0; i < cookies.length; i++) {
                    let cookie = cookies[i].trim();
                    if (cookie.startsWith('_ga=')) {
                        const value = cookie.substring(4); // Elimina "_ga="
                        const parts = value.split('.');
                        if (parts.length >= 4) {
                            return parts[2] + '.' + parts[3];
                        }
                    }
                }
                return null; // Devuelve null si no se encuentra la cookie
            }


            // --- LÓGICA PARA SUBMIT ---
            $('#confirmarPedidoBtn').on('click', function(e) {
                if (!$('#privacityTKM').is(":checked")) {
                    alert("Debes aceptar los términos y la política de privacidad.");
                    e.preventDefault();
                    return;
                }
                // 1. Obtenemos el Client ID
                const clientId = getGoogleAnalyticsClientId();

                // 2. Si lo encontramos, creamos un campo oculto en el formulario para enviarlo
                if (clientId) {
                    // Se elimina cualquier campo anterior para evitar duplicados
                    $('#googleClientIdField').remove();

                    $('<input>').attr({
                        type: 'hidden',
                        id: 'googleClientIdField',
                        name: 'googleClientId',
                        value: clientId
                    }).appendTo('#checkoutForm');
                }

                // El formulario se enviará de forma natural después de esto
            });
        });
    </script>
{% endblock %}

